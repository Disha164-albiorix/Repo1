GIT - VCS - version controll system

- to track changes in files/folders
- to collaborate in teams


GIT is a - DVCS (Distibuted Version Control System)

-----------------------

GIT HUB - Git hub is a website to upload your repositories online
        - provides backup
        - provides visual interface to your repositories
        - makes collaboration easier

GIT != GIT HUB

- GIT is a Version Control System 
- GitHub is a just a website where you can put your repositories
- 



Repository:

Install Git:

Step 1: Check if git is already installed
        terminal - git --version

Step 2: Download and install git

Step 3: Signup and create a account on GitHub
       https://github.com

Step 4: Add your github email and username to git
      git config --global user.email "dishap.albiorix@gmail.com"
      git config --global user.name "Disha164-albiorix"
 
Step 5: Add file/folder to git - tracking the changes

Step 6: Commands
     - terminal - goto the location of the folder/project
     - git init
     - git status
     - git add
     - git commit -m "...." (..... --> "added test1.txt")
     - git remote add origin "location of remote repo"
     - git push -u origin master
     - git remote add origin "location of remote repo"
     - git push -u origin master

Cd /Users/Albiorix Technology/Desktop

Commands in Git:
git status - Display a list of files in your staging directory with accompanying file status
git add [filename] - Stage file changes
git commit - Save changes to your Git repository
git init - create a new repo
- Executing this command will create a new .git subdirectory in your current working directory.



Create branch:

Step 1: Create branch
       git branch "branch name"

Step 2: Checkout branch
       git checkout "branch name"

Step 3: Merge new branch in master branch
       git merge "branch name"

Step 4: Delete branch
       git branch -d "branch name"  --> delete from local 
       git push origin --delete "branch name"  --> delete from remote


Demo:
Step 1: Signup and Login to HitHub.com
Step 2: Create a new Repository
Step 3: In the repo create a folder .github/workflows
Step 4: In the folder create a YAML file with .yml extension
Step 5: Add the content of the workflow in the file
Step 6: Commit and push the changes 
Step 7: Goto repo main page and click "Action" tab
Step 8: Select the workflow from left sidebar and check the logs and results

Terms used:

WORKFLOW: collecton of jos, defined in a YAML file --> name
EVENTS: any activity in the repo that can trigger a workflow --> on
JOBS: collection of steps --> Jobs
STEPS: axtions to be taken, commends, scripts --> steps
Chain Jobs --> needs









